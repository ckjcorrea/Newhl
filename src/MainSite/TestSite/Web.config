<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->

<configuration>
  <configSections>
    <sectionGroup name="Vistaprint">
      <sectionGroup name="Digital">
        <section name="OAuthEndpoints" type="AlwaysMoveForward.OAuth.Contracts.Configuration.EndpointConfiguration, AlwaysMoveForward.OAuth.Contracts" requirePermission="false" />
        <section name="OAuthKeys" type="AlwaysMoveForward.OAuth.Contracts.Configuration.OAuthKeyConfiguration, AlwaysMoveForward.OAuth.Contracts" requirePermission="false" />
        <section name="OpenAuthOAuthEndpoints" type="AlwaysMoveForward.OAuth.Contracts.Configuration.EndpointConfiguration, AlwaysMoveForward.OAuth.Contracts" requirePermission="false" />
        <section name="OpenAuthOAuthKeys" type="AlwaysMoveForward.OAuth.Contracts.Configuration.OAuthKeyConfiguration, AlwaysMoveForward.OAuth.Contracts" requirePermission="false" />
        <section name="MonolithEndpoints" type="AlwaysMoveForward.OAuth.Contracts.Configuration.EndpointConfiguration, AlwaysMoveForward.OAuth.Contracts" requirePermission="false" />
        <section name="MonolithKeys" type="AlwaysMoveForward.OAuth.Contracts.Configuration.OAuthKeyConfiguration, AlwaysMoveForward.OAuth.Contracts" requirePermission="false" />
      </sectionGroup>
    </sectionGroup>
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
		<section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" /><section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" /></sectionGroup>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="TestSite.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <Vistaprint>
    <Digital>
      <!--  Test Security in dev environment through IIS proxy-->
      <!-- <OAuthEndpoints ServiceUri="http://DEVLEXDIGSVC001.vistaprint.svc:50000" RequestTokenUri="/OAuth/GetRequestToken" AccessTokenUri="/OAuth/ExchangeRequestTokenForAccessToken" AuthorizationUri="/User/Signin" /> -->
      <!--  Test Security in Test environment through IIS proxy-->
      <!-- <OAuthEndpoints ServiceUri="http://TSTLEXDIGSVC001.vistaprint.svc:50000" RequestTokenUri="/OAuth/GetRequestToken" AccessTokenUri="/OAuth/ExchangeRequestTokenForAccessToken" AuthorizationUri="/User/Signin" /> -->
      <!--  Test Security in Staging environment through IIS proxy-->
      <!-- <OAuthEndpoints ServiceUri="http://STGVENDIGSVC001.vistaprint.svc:50000" RequestTokenUri="/OAuth/GetRequestToken" AccessTokenUri="/OAuth/ExchangeRequestTokenForAccessToken" AuthorizationUri="/User/Signin" /> -->
      <!--  Test Security in Prod environment through IIS proxy-->
      <!-- <OAuthEndpoints ServiceUri="http://PRDVENDIGSVC001.vistaprint.svc:50000" RequestTokenUri="/OAuth/GetRequestToken" AccessTokenUri="/OAuth/ExchangeRequestTokenForAccessToken" AuthorizationUri="/User/Signin" /> -->
      <!--  Test Security locally through Service Stack Proxy -->
      <OAuthEndpoints ServiceUri="http://localhost:50000" RequestTokenUri="/OAuth/GetRequestToken" AccessTokenUri="/OAuth/ExchangeRequestTokenForAccessToken" AuthorizationUri="/User/Signin" /> 
      <OAuthKeys ConsumerKey="204d869d-5cf1-4601-b21f-e62622d8920a" ConsumerSecret="057ac52d-9b99-48be-970b-3290dcac47cd" />
      <OpenAuthOAuthEndpoints ServiceUri="http://localhost:8091" RequestTokenUri="/Oauth/token" AccessTokenUri="/Oauth/token" AuthorizationUri="Oauth/Authorize" />
      <OpenAuthOAuthKeys ConsumerKey="07169c3a63174ca7942f41f3af4c9967" ConsumerSecret="AgYSyxPCLcnYn8Fd+AvrArU9tRu9J7xFIsXjiRmvj4J7VtD2CZ2cC1KegvbB1O4wgVisfRhYvFrqsUWrkhFqFg==" />
      <MonolithEndpoints ServiceUri="https://secure.vptest.com" RequestTokenUri="/eva/api/accountauthenticator/getrequesttoken.api" AccessTokenUri="/eva/api/accountauthenticator/getauthorizedaccount.api" AuthorizationUri="/authorize-account.aspx" />
      <MonolithKeys ConsumerKey="07169c3a63174ca7942f41f3af4c9967" ConsumerSecret="AgYSyxPCLcnYn8Fd+AvrArU9tRu9J7xFIsXjiRmvj4J7VtD2CZ2cC1KegvbB1O4wgVisfRhYvFrqsUWrkhFqFg==" />
    </Digital>
  </Vistaprint>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>

  <system.web>
    
    <compilation debug="true" targetFramework="4.0" />

    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    <sessionState mode="InProc" cookieless="false" timeout="20" />
  </system.web>

  <system.webServer>    
    <validation validateIntegratedModeConfiguration="false" />
    
    <modules runAllManagedModulesForAllRequests="true" />
    
  <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers></system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 --><!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). --><legacyHMACWarning enabled="0" /><!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 --></runtime><system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net><dotNetOpenAuth>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<reporting enabled="true" />
	<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. --><!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ --><openid>
		<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
				</behaviors>
			</relyingParty><provider>
			</provider></openid></dotNetOpenAuth><uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri><applicationSettings>
    <TestSite.Properties.Settings>
      <setting name="Setting" serializeAs="String">
        <value>&lt;EncryptedValue&gt;
  &lt;Method&gt;None&lt;/Method&gt;
  &lt;Value&gt;Here is my unencrypted thing&lt;/Value&gt;
&lt;/EncryptedValue&gt;</value>
      </setting>
    </TestSite.Properties.Settings>
  </applicationSettings>
</configuration>
